/**
 * Senzing REST API
 * This is the Senzing REST API.  It describes the REST interface to Senzing API functions available via REST.  It leverages the Senzing native API which is documented at [https://docs.senzing.com](https://docs.senzing.com). <br><br> <b>NOTE:</b> Some end-points described here will indicate \"(Supports SSE)\" to indicate that they support \"Server-sent Events\" via the `text/event-stream` media type.  This support is activated by adding the `Accept: text/event-stream` header to a request to override the default `application/json` media type.  Further, the end-point will behave the similarly to its stand operation but will produce `progress` events at regular intervals that are equivalent to its `200` response schema. Upon success, the final event will be `completed` with the same response schema as a `200` response.  Upon failure, the final event will be `failed` with same schema as the `4xx` or `5xx` response (typically the `SzErrorResponse`) [https://docs.senzing.com](https://docs.senzing.com)
 *
 * OpenAPI spec version: 2.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Describes the number of records associated with a specific data source for a given resolved entity.  Optionally, if the complete set of records has been retrieved for the associated entity, then this may also contain the \"top 10\" record IDs for the associated data source.
 */
export interface SzDataSourceRecordSummary {
  /**
   * The data source code identifying the data source for which the record breakdown is being described.
   */
  dataSource?: string;
  /**
   * The number of records from the respective data source that are part of the associated resolved entity.
   */
  recordCount?: number;
  /**
   * The optional array of string record ID's identifying the top 10 records for the associated entity from the respective data source. This may be null or an empty array if the data was not available.
   */
  topRecordIds?: Array<string>;
}
