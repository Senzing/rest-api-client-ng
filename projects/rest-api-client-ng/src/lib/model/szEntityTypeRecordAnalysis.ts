/**
 * Senzing REST API
 * This is the Senzing REST API.  It describes the REST interface to Senzing API functions available via REST.  It leverages the Senzing native API which is documented at [https://docs.senzing.com](https://docs.senzing.com). <br><br> <b>NOTE:</b> Some end-points described here will indicate \"(Supports SSE)\" to indicate that they support \"Server-sent Events\" via the `text/event-stream` media type.  This support is activated by adding the `Accept: text/event-stream` header to a request to override the default `application/json` media type.  Further, the end-point will behave the similarly to its stand operation but will produce `progress` events at regular intervals that are equivalent to its `200` response schema. Upon success, the final event will be `completed` with the same response schema as a `200` response.  Upon failure, the final event will be `failed` with same schema as the `4xx` or `5xx` response (typically the `SzErrorResponse`) [https://docs.senzing.com](https://docs.senzing.com)
 *
 * OpenAPI spec version: 2.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Provides statistics specific to a given entity type of the records found in bulk data.
 */
export interface SzEntityTypeRecordAnalysis {
  /**
   * The entity type code identifying the entity type for which the statistics are being provided.  This is `null` if the statistics pertain to those records with no entity type defined in the source data.
   */
  entityType?: string;
  /**
   * The number of records having the associated entity type.
   */
  recordCount?: number;
  /**
   * The number of records having the associated entity type that include a `RECORD_ID` value.
   */
  recordsWithRecordIdCount?: number;
  /**
   * The number of records having the associated entity type that include a `DATA_SOURCE` value.
   */
  recordsWithDataSourceCount?: number;
}
