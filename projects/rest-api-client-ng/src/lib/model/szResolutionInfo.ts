/**
 * Senzing REST API
 * This is the Senzing REST API.  It describes the REST interface to Senzing API functions available via REST.  It leverages the Senzing native API which is documented at [https://docs.senzing.com](https://docs.senzing.com). <br><br> <b>NOTE:</b> Some end-points described here will indicate \"(Supports SSE)\" to indicate that they support \"Server-sent Events\" via the `text/event-stream` media type.  This support is activated by adding the `Accept: text/event-stream` header to a request to override the default `application/json` media type.  Further, the end-point will behave the similarly to its stand operation but will produce `progress` events at regular intervals that are equivalent to its `200` response schema. Upon success, the final event will be `completed` with the same response schema as a `200` response.  Upon failure, the final event will be `failed` with same schema as the `4xx` or `5xx` response (typically the `SzErrorResponse`) [https://docs.senzing.com](https://docs.senzing.com)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { SzFlaggedEntity } from './szFlaggedEntity';

/**
 * Provides information relevant to resolution of an entity either when loading a record or reevaluating an entity.
 */
export interface SzResolutionInfo { 
    /**
     * The data source for the record that was focus of the load or reevaluate operation.
     */
    dataSource?: string;
    /**
     * The record ID for the record that was focus of the load or reevaluate operation.
     */
    recordId?: string;
    /**
     * The array of entity ID's for the affected entities.
     */
    affectedEntities?: Array<number>;
    /**
     * The entities that were flagged as relevant due to the resolution operation.
     */
    flaggedEntities?: Array<SzFlaggedEntity>;
}