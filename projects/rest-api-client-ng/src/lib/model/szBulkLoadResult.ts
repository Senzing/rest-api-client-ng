/**
 * Senzing REST API
 * This is the Senzing REST API.  It describes the REST interface to Senzing API functions available via REST.  It leverages the Senzing native API which is documented at [https://docs.senzing.com](https://docs.senzing.com)
 *
 * OpenAPI spec version: 1.8.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { SzBulkDataStatus } from './szBulkDataStatus';
import { SzBulkLoadError } from './szBulkLoadError';
import { SzDataSourceBulkLoadResult } from './szDataSourceBulkLoadResult';

/**
 * Describes the result from loading a set of bulk data records described as a JSON array, JSON Lines format or CSV format.
 */
export interface SzBulkLoadResult { 
    status?: SzBulkDataStatus;
    /**
     * The character encoding used to process the bulk data.
     */
    characterEncoding?: string;
    /**
     * The media type of the bulk data.
     */
    mediaType?: string;
    /**
     * The number of records found in the bulk data set.  This may not match the number of \"observed entities\" once loaded since some records may be exact duplicates.
     */
    recordCount?: number;
    /**
     * The number of records successfully loaded from the bulk data set. This may not match the number of \"observed entities\" loaded since some records may be exact duplicates.
     */
    loadedRecordCount?: number;
    /**
     * The number of records for which the attempt to load failed with an error.
     */
    failedRecordCount?: number;
    /**
     * The number of records that are incomplete because they are missing a `DATA_SOURCE` field.
     */
    incompleteRecordCount?: number;
    /**
     * The array of `SzDataSourceBulkDataResult` elements describing the load statistics by data source.
     */
    resultsByDataSource?: Array<SzDataSourceBulkLoadResult>;
    /**
     * The array of top error occurrences with the number of times they occurred.
     */
    topErrors?: Array<SzBulkLoadError>;
}